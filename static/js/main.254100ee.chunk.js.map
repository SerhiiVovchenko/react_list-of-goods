{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","goods","visibleGoods","sort","n1","n2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","handleclick","type","setState","forceUpdate","className","classNames","onClick","map","name","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,0GAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZI,EAnCH,SACLA,EADK,GAGJ,IADCH,EACF,EADEA,SAAUD,EACZ,EADYA,WAENK,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQP,GACN,KAAKL,EAASa,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKZ,EAASe,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAIJZ,EAA6BK,EAAaQ,UAA5BR,EAgBPS,CAAkBjB,EAAiB,CAAEI,WAAUD,eAEvDe,EAAc,SAACC,GACnB,EAAKC,SAAS,CAAEhB,SAAUe,IAC1B,EAAKE,eAQP,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEH,KAAK,SACLG,UAAWC,IACT,iBACA,CACE,WAAYnB,IAAaL,EAASa,WAGtCY,QAAS,kBAAMN,EAAYnB,EAASa,WARtC,iCAaA,wBACEO,KAAK,SACLG,UAAWC,IACT,oBACA,CACE,WAAYnB,IAAaL,EAASe,SAGtCU,QAAS,kBAAMN,EAAYnB,EAASe,SARtC,4BAaA,wBACEK,KAAK,SACLG,UAAWC,IACT,oBACA,CACE,YAA2B,IAAfpB,IAGhBqB,QAAS,kBAzCf,EAAKJ,SAAS,CAAEjB,YAAaA,SAC7B,EAAKkB,eAgCD,sBAaEjB,IAAaL,EAASM,MAAQF,IAC9B,wBACEgB,KAAK,SACLG,UAAU,4BACVE,QAAS,WACP,EAAKJ,SAAS,CACZjB,YAAY,EACZC,SAAUL,EAASM,QANzB,sBAgBJ,6BACE,6BACGE,EAAMkB,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBApFrB,GAAyBC,IAAMC,WCrD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.254100ee.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((n1, n2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return n1.localeCompare(n2);\n\n      case SortType.LENGTH:\n        return n1.length - n2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return (!isReversed) ? visibleGoods : visibleGoods.reverse();\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    const handleclick = (type: SortType) => {\n      this.setState({ sortType: type });\n      this.forceUpdate();\n    };\n\n    const reverseClick = () => {\n      this.setState({ isReversed: !isReversed });\n      this.forceUpdate();\n    };\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => handleclick(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => handleclick(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': isReversed === false,\n              },\n            )}\n            onClick={() => reverseClick()}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({\n                  isReversed: false,\n                  sortType: SortType.NONE,\n                });\n              }}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(name => (\n              <li\n                data-cy=\"Good\"\n                key={name}\n              >\n                {name}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}